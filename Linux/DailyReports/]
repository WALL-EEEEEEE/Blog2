#### 上周任务回顾

+ 完成小型的吐槽系统
+ 完成吐槽导出excel的工具编写


#### 上周收获


+ 了解了碰撞检测的原理
+ 完成了吐槽系统的编写和上线
+ 完成吐槽导出工具的粗糙版编写

#### 碰撞检测的原理

> 碰撞检测在游戏中十分常见，它主要分为2d检测,和3d检测,其中2d检测又分为:  圆形检测、像素检测、和矩形检测, 3d检测分为: 立方体检测、球检测、和三角型检测。在弹幕中要让弹幕不碰撞的话，我们只需要作矩形检测就好了。


#### 矩形检测的原理

> 要检测两个矩形是否碰撞，我们只要检查两矩形的中心的纵坐标(x1, y1) , (x2, y2)之差是否小于或者等于两矩形(l1,l2)的长的一半的和  | y2-y1 | >= l2/2 + l1/2 就可以了

#### 圆形检测原理

> 要检测两圆形是否碰撞，我们只需要检测两圆形的圆心的距离小于或者等于两圆半径之和即可

```
   设两圆的半径分别为r1, r2, 两圆心之间的距离为d

   d <= r1+r2
```


#### ajax获得的数据如何通过函数返回

> 在作吐槽的过程中写ajax的时候，有一些业务逻辑需要对拿过来的数据进行处理，个人认为如果将业务逻辑全部写到success方法中会显得比较臃肿.那么如果将ajax获得的数据通过函数返回呢?

+ 方法一(ajax同步操作)

> 其中一种方法是通过ajax同步操作来实现,设定一个全局变量，同时在ajax中的success中给全局变量赋值

```javascript

   var global = null;

$.ajax(
    url: xxxx,
    data: data,
    )

```









#### 这周展望

+ 继续完善吐槽系统的细节
+ 继续加强导出工具的功能，如指定导出目录

